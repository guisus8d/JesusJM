---
import ImgLogo from '../../public/Logo.svg';

import '@fontsource/anton';

import '@fontsource/ubuntu';
---

<!-- contendido de [Header] -->




<header>
  <div class="menu">
    <img 
      src={ImgLogo.src} 
      alt="Logo de la pagina" 
      class="logo"
      id="menuToggle"
    />
    <nav class="fullscreen-menu" id="fullscreenMenu">
      <button class="close-button" id="closeButton" aria-label="Cerrar menú">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
      <ul>
        <li><a href="/">HOME</a></li>
        <li><a href="/about">SKILLS</a></li>
        <li><a href="/services">SERVICES</a></li>
        <li><a href="/portfolio">PROYECTS</a></li>
        <li><a href="/contact">CONTACTS</a></li>
      </ul>
    </nav>
  </div>
</header>

<style>
  .menu {
    position: relative;
    background: black;
    width: 100%;
    height: 60px;
    z-index: 100;
  }

  .logo {
    position: relative;
    width: 50px;
    margin: 7px;
    cursor: pointer;
    z-index: 101;
    transition: opacity 0.3s ease;
  }

  .logo.hidden {
    opacity: 0;
    pointer-events: none;
  }

  .fullscreen-menu {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: rgba(7, 7, 7, 0.76);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    display: none;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 99;
    transition: all 0.3s ease;
  }

  .fullscreen-menu.active {
    display: flex;
  }

  .close-button {
    position: absolute;
    top: 20px;
    right: 20px;
    background: transparent;
    border: none;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 10px;
    z-index: 102;
    transition: transform 0.3s ease;
  }

  .close-button:hover {
    transform: rotate(90deg);
  }

  .close-button svg {
    width: 30px;
    height: 30px;
  }

  .fullscreen-menu ul {
    list-style: none;
    padding: 0;
    margin: 0;
    text-align: center;
  }

  .fullscreen-menu li {
    margin: 30px 0;
  }

  .fullscreen-menu a {
	color: #c1ff72;
	font-family: 'Ubuntu', sans-serif;
    text-decoration: none;
    font-size: 20px;
    transition: color 0.3s;

  }

  .fullscreen-menu a:hover {
    color: #ffffff;
  }
</style>

<script is:inline>
  // Función para manejar el menú
  const setupMenu = () => {
    const menuToggle = document.getElementById('menuToggle');
    const fullscreenMenu = document.getElementById('fullscreenMenu');
    const closeButton = document.getElementById('closeButton');
    
    if (!menuToggle || !fullscreenMenu || !closeButton) return;
    
    const toggleMenu = (show) => {
      if (show) {
        fullscreenMenu.classList.add('active');
        menuToggle.classList.add('hidden');
        document.body.style.overflow = 'hidden'; // Previene scroll
      } else {
        fullscreenMenu.classList.remove('active');
        menuToggle.classList.remove('hidden');
        document.body.style.overflow = '';
      }
    };
    
    // Event listeners
    menuToggle.addEventListener('click', () => toggleMenu(true));
    closeButton.addEventListener('click', () => toggleMenu(false));
    
    // Cerrar al hacer clic fuera del menú
    document.addEventListener('click', (e) => {
      if (fullscreenMenu.classList.contains('active') && 
          !fullscreenMenu.contains(e.target) && 
          e.target !== menuToggle) {
        toggleMenu(false);
      }
    });
    
    // Cerrar al presionar Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && fullscreenMenu.classList.contains('active')) {
        toggleMenu(false);
      }
    });
    
    // Cerrar al hacer clic en enlaces
    const menuLinks = fullscreenMenu.querySelectorAll('a');
    menuLinks.forEach(link => {
      link.addEventListener('click', () => toggleMenu(false));
    });
  };
  
  // Inicializar cuando el DOM esté listo
  if (document.readyState !== 'loading') {
    setupMenu();
  } else {
    document.addEventListener('DOMContentLoaded', setupMenu);
  }
</script>

